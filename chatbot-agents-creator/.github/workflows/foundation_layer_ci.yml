name: Foundation Layer CI

on:
  push:
    branches: [ main ]
    paths:
      - 'implementation/01_foundation_layer/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'implementation/01_foundation_layer/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f implementation/01_foundation_layer/requirements.txt ]; then pip install -r implementation/01_foundation_layer/requirements.txt; fi
        pip install pytest pytest-cov flake8
        pip install -e implementation/01_foundation_layer
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 implementation/01_foundation_layer/src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 implementation/01_foundation_layer/src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest implementation/01_foundation_layer/tests/ --cov=implementation/01_foundation_layer/src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: foundation-layer
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        cd implementation/01_foundation_layer
        python -m build
        
    - name: Check package
      run: |
        cd implementation/01_foundation_layer
        twine check dist/*
        
    # Uncomment when ready to publish to PyPI
    # - name: Publish to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
    #     packages-dir: implementation/01_foundation_layer/dist/